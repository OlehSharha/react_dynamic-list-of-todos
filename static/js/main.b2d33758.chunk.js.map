{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","setQuery","status","setStatus","value","onChange","event","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","fetchUser","a","userId","userFromServer","useEffect","catch","Error","href","name","App","setTodos","setSelectedTodoId","visibleTodos","modalTodo","filter","lowQuery","toLowerCase","isMatchingTodos","fetchTodos","goodFromServer","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2d33758.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n  selectedTodoId: number\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                selectTodo(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  {\n                    'fa-eye': selectedTodoId !== todo.id,\n                    'fa-eye-slash': selectedTodoId === todo.id,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: (event: string) => void,\n  status: string,\n  setStatus: (stats: string) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  query,\n  setQuery,\n  status,\n  setStatus,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => {\n            setStatus(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader: React.FC = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo\n  selectTodo: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectTodo, todo }) => {\n  const [user, setUser] = useState<User>();\n\n  const fetchUser = async () => {\n    const userFromServer = await getUser(todo.userId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(() => {\n    fetchUser();\n    fetchUser().catch(Error);\n  }, []);\n\n  return (\n    <div\n      className={classNames('modal', { 'is-active': todo })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => selectTodo(0)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  let visibleTodos = todos;\n\n  const modalTodo = visibleTodos.filter(todo => todo.id === selectedTodoId);\n\n  const lowQuery = query.toLowerCase();\n\n  const isMatchingTodos = (!query)\n    ? <Loader />\n    : <p>Nothing is matching</p>;\n\n  const selectTodo = (id: number) => {\n    if (selectedTodoId !== id) {\n      setSelectedTodoId(id);\n    } else {\n      setSelectedTodoId(0);\n    }\n  };\n\n  const fetchTodos = async () => {\n    const goodFromServer = await getTodos();\n\n    setTodos(goodFromServer);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n    fetchTodos().catch(Error);\n  }, []);\n\n  switch (status) {\n    case ('all'):\n      visibleTodos = todos;\n      break;\n\n    case ('active'):\n      visibleTodos = todos.filter(todo => !todo.completed);\n      break;\n    case ('completed'):\n      visibleTodos = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (query) {\n    visibleTodos = visibleTodos.filter(todo => {\n      return todo.title.toLowerCase().includes(lowQuery);\n    });\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                status={status}\n                setStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={selectTodo}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : (isMatchingTodos)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId !== 0\n        && (\n          <TodoModal\n            todo={modalTodo[0]}\n            selectTodo={selectTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}